// 问题：https://leetcode-cn.com/problems/combine-two-tables/
// 答题：

select
    p.FirstName,
    p.LastName,
    a.City,
    a.State
from
    Person p
left join
    Address a
on
    p.PersonId = a.PersonId;

// 提交结果：https://leetcode-cn.com/submissions/detail/52643342/
执行用时 : 284 ms, 在所有 MySQL 提交中击败了 12.85% 的用户
内存消耗 : 0B, 在所有 MySQL 提交中击败了 100.00% 的用户

// 题解说明
作者：xksa
链接：https://leetcode-cn.com/problems/combine-two-tables/solution/joinji-ben-shi-yong-by-xksa/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

本题主要考察多表连接。
按题意要求，使用outer join时可以保证指定表的每条记录都出现----即使没有匹配, outer join又可以分为left join, right join, full join。
我们想让Address表中即使没有Person，也让Person有Address属性,所以Address为必须出现表，那么我们可以用 Person表 left join Address，或者反过来用right join。
select A.FirstName, A.LastName, B.City, B.State from Person A left join Address B
on A.PersonId = B.PersonId;

我看了一下运行效率比较高的朋友的解法，在join前先对Address表处理，去除Address里的重复项，然后让Person left join Address。
select A.FirstName, A.LastName, B.City, B.State from Person A left join (
select distinct PersonId, City, State from Address) B
on A.PersonId = B.PersonId;

这样做的好处是，在数据量特别大而且重复量也特别大时，可以节省join次数，从而节省效率，当然当数据量不那么大，重复数据不那么多时，反而会影响效率，大家可以说说自己看法。

